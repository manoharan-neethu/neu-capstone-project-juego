- hosts: localhost
  vars:
    public_ctfd_fqdn: "ctf.juego2022.com"
    letsencrypt_email: "neuteamserrucho2022@gmail.com"
    letsencrypt_config_dir: "./tls/nginx-letsencrypt-tls/config/"
    letsencrypt_work_dir: "./tls/nginx-letsencrypt-tls/work/"
    letsencrypt_logs_dir: "./tls/nginx-letsencrypt-tls/log/"
 
  tasks:
  - name: >- 
      Create nginx letsencrypt cert bundle directory. This bundle will contain the letsencrypt 
      certificate CTF participants will see when they browse to CTFd.
    ansible.builtin.file:
      path: ./tls/nginx-letsencrypt-tls/
      state: directory
      mode: '0755'

  - name: Check if a letsencrypt certificate with the public CTFd FQDN already exists
    stat:
      path: "{{ letsencrypt_config_dir }}/live/{{ public_ctfd_fqdn }}/fullchain.pem"
    register: ctfd_cert 

  - name: >- 
      If nginx is our DNS provider, we will take advantage certbot's nginx plugin to 
      request a letsencrypt certificate. To do this, we need a cloud API token that allows us to 
      modify our public domain's DNS records. The token must be stored in a nginx.ini 
      file for certbot to use it. In this step, we generate the nginx.ini file from a 
      template pulling the nginx API token from our LastPass vault.
    ansible.builtin.template:
      src: ./templates/nginx-ini-template.j2
      dest: ./nginx.ini
      mode: '0600'

  - name: If a certificate does not already exist, request a certificate using certbot's nginx plugin
    command: "certbot certonly --nginx --non-interactive --config-dir {{ letsencrypt_config_dir }} --work-dir {{ letsencrypt_work_dir }} --logs-dir {{ letsencrypt_logs_dir }} --agree-tos --email {{ letsencrypt_email }} -d {{ public_ctfd_fqdn }} -d www.{{ public_ctfd_fqdn }}"
    register: certbot_request_output
    when: not ctfd_cert.stat.exists

  - name: If the certificate does already exist, try to renew it
    command: "certbot renew --nginx --config-dir {{ letsencrypt_config_dir }} --work-dir {{ letsencrypt_work_dir }} --logs-dir {{ letsencrypt_logs_dir }}"
    register: certbot_request_output
    when: ctfd_cert.stat.exists 

  - name: delete generated nginx.ini file
    ansible.builtin.file:
      path: ./nginx.ini
      state: absent

  - name: Compress nginx-letsencrypt-tls bundle
    community.general.archive:
      path: 
      - "{{ letsencrypt_config_dir }}"
      dest: ./tls/nginx-letsencrypt-tls.tgz


